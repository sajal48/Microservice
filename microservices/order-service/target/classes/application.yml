spring:
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      spring:
        json:
          trusted:
            packages: '*'
      properties:
        spring:
          json:
            type:
              mapping: 'event:com.example.notifyservice.event.OrderPlacedEvent'

  datasource:
    url: jdbc:postgresql://localhost:5432/microServices
    username: postgres
    password: letmein48
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  application:
    name: order-service
server:
  port: 0
eureka:
  client:
    serviceUrl:
      defaultZone: http://eureka:password@localhost:8761/eureka
management:
  tracing:
    sampling:
      probability: '1.0'
  endpoints:
    web:
      exposure:
        include: '*'
  health:
    circuitbreakers:
      enabled: true
  endpoint:
    health:
      show-details: always


resilience4j:
  circuitbreaker:
    instances:
      invntory:
        register-health-indicator: true
        event-consumer-buffer-size: 10
        sliding-window-type: COUNT_BASED
        sliding-window-size: 5
        failure-rate-threshold: 50
        wait-duration-in-open-state: 5s
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
  timelimiter:
    instances:
      inventory :
        timeout-duration: 3s
  retry:
    instances:
      inventory:
        max-attempts: 3
        wait-duration: 5s


